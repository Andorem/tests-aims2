/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 02 05:00:21 GMT 2019
 */

package als.pbt.lab8;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import als.pbt.lab8.MinMax;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MinMax_ESTest extends MinMax_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = MinMax.min(2590, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = MinMax.max((-1638), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("*e{[)+");
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        MinMax.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = MinMax.max((-737), (-737));
      assertEquals((-737), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = MinMax.min(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = MinMax.max(0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = MinMax.max((-507), (-730));
      assertEquals((-507), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = MinMax.min((-730), (-507));
      assertEquals((-730), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      SystemInUtil.addInputLine("8");
      MinMax.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MinMax minMax0 = new MinMax();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        MinMax.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
